# image: "butler.mitre.org/atlas/caldera-dev:4.0.0"
image: "python:3.9"

stages:
  # - Static Analysis
  # - Tests
  - Documentation
  # - Release

# GitLab Pages #
################
.pages:
  script:
    - pip install -U sphinx sphinx-autoapi sphinx-rtd-theme myst-parser furo
    - sphinx-build -d docs/build/doctrees docs/source docs/build/html
    - mv docs/build/html public/


test-pages:
  stage: Documentation
  tags:
    - docker
  extends: .pages
  needs: []
  artifacts:
    expose_as: 'HTML Documentation'
    paths:
      - public/
    expire_in: 1 week
  only:
    - merge_requests

pages:
  stage: Documentation
  tags:
    - docker
    - pages
  extends: .pages
  artifacts:
    paths:
      - public
  only:
    - tags

#########
# Tests #
#########
# .set-up-auth:
#   script:
#     - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#     - eval $(ssh-agent -s)
#     - echo "${CI_IDENTITY_FILE}" | tr -d '\r' | ssh-add -
#     - mkdir -p ~/.ssh
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

# unittests:
#   stage: Tests
#   tags:
#     - docker
#   script:
#     - !reference [.set-up-auth, script]
#     - >
#       ssh arsenal-test@hemingway.mitre.org
#       "docker login butler.mitre.org -u ${BUTLER_LOGIN_USERNAME} -p ${BUTLER_LOGIN_PASSWORD} &&
#       cd arsenal &&
#       git checkout ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} &&
#       cd .. &&
#       docker build -t . caldera-dev:test &&
#       docker run -v ./arsenal/default.yml:/usr/src/app/conf/local.yml
#       docker exec caldera-dev:test python -m unittest discover -p 'test_*.py'"